#!/bin/bash
# Git pre-push hook - Ensures cargo build succeeds before pushing
# Install: git config core.hooksPath .githooks

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "üî® Pre-push: Running cargo build..."

# Store the current directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BACKEND_DIR="$(dirname "$SCRIPT_DIR")"

# Navigate to backend directory
cd "$BACKEND_DIR" || exit 1

# Set up PostgreSQL paths for macOS if needed
if [[ "$OSTYPE" == "darwin"* ]]; then
    # Check if PostgreSQL is installed via Homebrew
    if command -v brew &> /dev/null; then
        # Try to find PostgreSQL installation
        PG_PATH=$(brew --prefix postgresql@16 2>/dev/null || brew --prefix postgresql@15 2>/dev/null || brew --prefix postgresql 2>/dev/null)
        if [ -n "$PG_PATH" ]; then
            export PKG_CONFIG_PATH="$PG_PATH/lib/pkgconfig:$PKG_CONFIG_PATH"
            export PQ_LIB_DIR="$PG_PATH/lib"
            echo "üì¶ Using PostgreSQL from: $PG_PATH"
        fi
    fi
fi

# Run cargo check instead of build (faster and sufficient for pre-push)
if ! PKG_CONFIG_PATH="$PKG_CONFIG_PATH" PQ_LIB_DIR="$PQ_LIB_DIR" cargo check 2>&1; then
    echo -e "${RED}‚ùå ERROR: Cargo build failed!${NC}"
    echo ""
    echo "The build must succeed before pushing to remote."
    echo "Fix the build errors and try again."
    echo ""
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "üí° TIP: If you're seeing 'library pq not found', install PostgreSQL:"
        echo "  brew install postgresql@16"
        echo ""
    fi
    echo "To bypass this check (NOT RECOMMENDED):"
    echo "  git push --no-verify"
    exit 1
fi

echo -e "${GREEN}‚úÖ Cargo check succeeded!${NC}"

# Optional: Run cargo clippy for linting
echo "üîç Running cargo clippy..."
if ! cargo clippy -- -D warnings 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  WARNING: Clippy found issues${NC}"
    echo "Consider fixing these before pushing."
    # Not failing on clippy warnings, just informing
fi

# Code formatting is now handled by pre-commit hook
# No need to check here since commits are already formatted

echo -e "${GREEN}‚úÖ All pre-push checks completed!${NC}"
exit 0